# Generated by Django 5.2.4 on 2025-08-04 17:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AssetType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("platform_id", models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Market",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("platform_id", models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="AllAssets",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.CharField(max_length=50)),
                ("name", models.CharField(max_length=200)),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("saxo", "Saxo Bank"),
                            ("binance", "Binance"),
                            ("yahoo", "Yahoo Finance"),
                        ],
                        max_length=20,
                    ),
                ),
                ("asset_type", models.CharField(max_length=50)),
                ("market", models.CharField(max_length=50)),
                ("currency", models.CharField(default="USD", max_length=10)),
                ("exchange", models.CharField(blank=True, max_length=100)),
                ("is_tradable", models.BooleanField(default=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("saxo_uic", models.IntegerField(blank=True, null=True)),
                ("saxo_exchange_id", models.CharField(blank=True, max_length=20)),
                ("saxo_country_code", models.CharField(blank=True, max_length=10)),
                ("binance_base_asset", models.CharField(blank=True, max_length=20)),
                ("binance_quote_asset", models.CharField(blank=True, max_length=20)),
                ("binance_status", models.CharField(blank=True, max_length=20)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["platform", "asset_type"],
                        name="trading_app_platfor_13a3b5_idx",
                    ),
                    models.Index(
                        fields=["symbol"], name="trading_app_symbol_424f8e_idx"
                    ),
                    models.Index(fields=["name"], name="trading_app_name_574d09_idx"),
                ],
                "unique_together": {("symbol", "platform")},
            },
        ),
        migrations.CreateModel(
            name="Asset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.CharField(max_length=20, unique=True)),
                ("symbol_clean", models.CharField(blank=True, max_length=20)),
                ("name", models.CharField(max_length=100)),
                ("sector", models.CharField(default="xxxx", max_length=100)),
                ("industry", models.CharField(default="xxxx", max_length=100)),
                ("market_cap", models.FloatField(default=0.0)),
                ("price_history", models.TextField(default="xxxx")),
                (
                    "all_asset",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="enriched_assets",
                        to="trading_app.allassets",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BrokerCredentials",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "broker_type",
                    models.CharField(
                        choices=[("saxo", "Saxo Bank"), ("binance", "Binance")],
                        max_length=20,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nom pour identifier cette configuration",
                        max_length=100,
                    ),
                ),
                (
                    "environment",
                    models.CharField(
                        choices=[
                            ("live", "Live Trading"),
                            ("simulation", "Simulation/Demo"),
                        ],
                        default="simulation",
                        help_text="Environnement de trading (Live ou Simulation)",
                        max_length=20,
                    ),
                ),
                (
                    "saxo_client_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "saxo_client_secret",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("saxo_redirect_uri", models.URLField(blank=True, null=True)),
                ("saxo_access_token", models.TextField(blank=True, null=True)),
                ("saxo_refresh_token", models.TextField(blank=True, null=True)),
                ("saxo_token_expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "binance_api_key",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "binance_api_secret",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("binance_testnet", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "broker_type", "name")},
            },
        ),
        migrations.CreateModel(
            name="AssetTradable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.CharField(max_length=20)),
                ("name", models.CharField(max_length=100)),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("saxo", "Saxo Bank"),
                            ("binance", "Binance"),
                            ("yahoo", "Yahoo Finance"),
                        ],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "all_asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tradable_versions",
                        to="trading_app.allassets",
                    ),
                ),
                (
                    "asset_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trading_app.assettype",
                    ),
                ),
                (
                    "market",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trading_app.market",
                    ),
                ),
            ],
            options={
                "unique_together": {("symbol", "platform")},
            },
        ),
        migrations.CreateModel(
            name="Position",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("size", models.DecimalField(decimal_places=2, max_digits=15)),
                ("entry_price", models.DecimalField(decimal_places=5, max_digits=15)),
                ("current_price", models.DecimalField(decimal_places=5, max_digits=15)),
                ("side", models.CharField(max_length=4)),
                ("status", models.CharField(max_length=10)),
                (
                    "pnl",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "asset_tradable",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trading_app.assettradable",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Strategy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Nom de la stratégie", max_length=100),
                ),
                (
                    "algorithm_type",
                    models.CharField(
                        choices=[
                            ("threshold", "Seuils (Threshold)"),
                            ("ma_crossover", "Moving Average Crossover"),
                            ("rsi", "RSI (Relative Strength Index)"),
                            ("bollinger", "Bollinger Bands"),
                            ("macd", "MACD"),
                            ("grid", "Grid Trading"),
                        ],
                        default="threshold",
                        help_text="Type d'algorithme",
                        max_length=20,
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(
                        default=dict, help_text="Paramètres spécifiques à l'algorithme"
                    ),
                ),
                (
                    "execution_mode",
                    models.CharField(
                        choices=[
                            ("simulation", "Simulation"),
                            ("paper_trading", "Paper Trading"),
                            ("live_trading", "Trading Réel"),
                        ],
                        default="simulation",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("paused", "En Pause"),
                        ],
                        default="inactive",
                        max_length=20,
                    ),
                ),
                (
                    "check_frequency",
                    models.IntegerField(
                        default=45, help_text="Fréquence de vérification en minutes"
                    ),
                ),
                (
                    "comments",
                    models.TextField(
                        blank=True, help_text="Commentaires sur la stratégie"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_execution", models.DateTimeField(blank=True, null=True)),
                ("total_trades", models.IntegerField(default=0)),
                ("successful_trades", models.IntegerField(default=0)),
                (
                    "total_pnl",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                (
                    "asset",
                    models.ForeignKey(
                        help_text="Asset sur lequel appliquer la stratégie",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trading_app.asset",
                    ),
                ),
                (
                    "broker",
                    models.ForeignKey(
                        help_text="Broker pour exécuter les ordres",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trading_app.brokercredentials",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StrategyExecution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("execution_time", models.DateTimeField(auto_now_add=True)),
                ("current_price", models.DecimalField(decimal_places=5, max_digits=15)),
                ("signal", models.CharField(max_length=10)),
                ("signal_strength", models.FloatField(default=0.0)),
                ("order_executed", models.BooleanField(default=False)),
                (
                    "order_size",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "order_price",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=15, null=True
                    ),
                ),
                ("execution_duration", models.FloatField(default=0.0)),
                ("error_message", models.TextField(blank=True)),
                (
                    "strategy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="executions",
                        to="trading_app.strategy",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Trade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("size", models.DecimalField(decimal_places=2, max_digits=15)),
                ("price", models.DecimalField(decimal_places=5, max_digits=15)),
                ("side", models.CharField(max_length=4)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("platform", models.CharField(max_length=20)),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trading_app.asset",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="strategy",
            index=models.Index(
                fields=["user", "status"], name="trading_app_user_id_0b4af6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="strategy",
            index=models.Index(
                fields=["algorithm_type"], name="trading_app_algorit_392325_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="strategy",
            index=models.Index(fields=["asset"], name="trading_app_asset_i_1a38d6_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="strategy",
            unique_together={("user", "asset", "name")},
        ),
        migrations.AddIndex(
            model_name="strategyexecution",
            index=models.Index(
                fields=["strategy", "execution_time"],
                name="trading_app_strateg_e35fa3_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="strategyexecution",
            index=models.Index(fields=["signal"], name="trading_app_signal_a374d5_idx"),
        ),
    ]
