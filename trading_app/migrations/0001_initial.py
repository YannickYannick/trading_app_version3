# Generated by Django 5.2.4 on 2025-07-26 21:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Asset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.CharField(max_length=20, unique=True)),
                ("name", models.CharField(max_length=100)),
                ("sector", models.CharField(default="xxxx", max_length=100)),
                ("industry", models.CharField(default="xxxx", max_length=100)),
                ("market_cap", models.FloatField(default=0.0)),
                ("price_history", models.TextField(default="xxxx")),
            ],
        ),
        migrations.CreateModel(
            name="AssetType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("platform_id", models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Market",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("platform_id", models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="AssetTradable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.CharField(max_length=20)),
                ("name", models.CharField(max_length=100)),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("saxo", "Saxo Bank"),
                            ("binance", "Binance"),
                            ("yahoo", "Yahoo Finance"),
                        ],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tradable_versions",
                        to="trading_app.asset",
                    ),
                ),
                (
                    "asset_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trading_app.assettype",
                    ),
                ),
                (
                    "market",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trading_app.market",
                    ),
                ),
            ],
            options={
                "unique_together": {("symbol", "platform")},
            },
        ),
        migrations.CreateModel(
            name="Position",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("size", models.DecimalField(decimal_places=2, max_digits=15)),
                ("entry_price", models.DecimalField(decimal_places=5, max_digits=15)),
                ("current_price", models.DecimalField(decimal_places=5, max_digits=15)),
                ("side", models.CharField(max_length=4)),
                ("status", models.CharField(max_length=10)),
                (
                    "pnl",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "asset_tradable",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trading_app.assettradable",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Strategy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Trade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("size", models.DecimalField(decimal_places=2, max_digits=15)),
                ("price", models.DecimalField(decimal_places=5, max_digits=15)),
                ("side", models.CharField(max_length=4)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("platform", models.CharField(max_length=20)),
                (
                    "asset_tradable",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trading_app.assettradable",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BrokerCredentials",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "broker_type",
                    models.CharField(
                        choices=[("saxo", "Saxo Bank"), ("binance", "Binance")],
                        max_length=20,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nom pour identifier cette configuration",
                        max_length=100,
                    ),
                ),
                (
                    "saxo_client_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "saxo_client_secret",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("saxo_redirect_uri", models.URLField(blank=True, null=True)),
                ("saxo_access_token", models.TextField(blank=True, null=True)),
                ("saxo_refresh_token", models.TextField(blank=True, null=True)),
                ("saxo_token_expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "binance_api_key",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "binance_api_secret",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("binance_testnet", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "broker_type", "name")},
            },
        ),
    ]
